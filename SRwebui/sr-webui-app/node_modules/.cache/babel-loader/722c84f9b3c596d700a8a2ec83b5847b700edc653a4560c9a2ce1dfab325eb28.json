{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\SRwebui\\\\SRwebui\\\\sr-webui-app\\\\src\\\\component\\\\BackgroundGalaxy.tsx\",\n  _s = $RefreshSig$();\nimport ReactDOM from 'react-dom';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BackgroundGalaxy() {\n  _s();\n  const canvasRef = useRef(null);\n  const pointsRef = useRef([]);\n  const animateHeaderRef = useRef(true);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        const target = {\n          x: width / 2,\n          y: height / 2\n        };\n        canvas.width = width;\n        canvas.height = height;\n        //create points\n        let points = [];\n        for (var x = 0; x < width; x = x + width / 20) {\n          for (var y = 0; y < height; y = y + height / 20) {\n            var px = x + Math.random() * width / 20;\n            var py = y + Math.random() * height / 20;\n            var p = {\n              x: px,\n              originX: px,\n              y: py,\n              originY: py\n            };\n            points.push(p);\n          }\n        }\n        for (var i = 0; i < points.length; i++) {\n          var closest = [];\n          var p1 = points[i];\n          for (var j = 0; j < points.length; j++) {\n            var p2 = points[j];\n            if (!(p1 === p2)) {\n              var placed = false;\n              for (var k = 0; k < 5; k++) {\n                if (!placed) {\n                  if (closest[k] === undefined) {\n                    closest[k] = p2;\n                    placed = true;\n                  }\n                }\n              }\n              for (var k = 0; k < 5; k++) {\n                if (!placed) {\n                  if (getDistance(p1, p2) < getDistance(p1, closest[k])) {\n                    closest[k] = p2;\n                    placed = true;\n                  }\n                }\n              }\n            }\n          }\n          p1.closest = closest;\n        }\n        const addListeners = () => {\n          window.addEventListener('mousemove', mouseMove);\n          window.addEventListener('scroll', scrollCheck);\n          window.addEventListener('resize', resize);\n        };\n        const mouseMove = e => {\n          // ... mouseMove implementation\n        };\n        const scrollCheck = () => {\n          // ... scrollCheck implementation\n        };\n        const resize = () => {\n          // ... resize implementation\n        };\n      }\n    }\n  }, []);\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this), document.body);\n}\n_s(BackgroundGalaxy, \"/UAEntPO2Un8usgjK8a3gHyZnNY=\");\n_c = BackgroundGalaxy;\nexport default BackgroundGalaxy;\nvar _c;\n$RefreshReg$(_c, \"BackgroundGalaxy\");","map":{"version":3,"names":["ReactDOM","useRef","useEffect","jsxDEV","_jsxDEV","BackgroundGalaxy","_s","canvasRef","pointsRef","animateHeaderRef","canvas","current","ctx","getContext","width","window","innerWidth","height","innerHeight","target","x","y","points","px","Math","random","py","p","originX","originY","push","i","length","closest","p1","j","p2","placed","k","undefined","getDistance","addListeners","addEventListener","mouseMove","scrollCheck","resize","e","createPortal","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","document","body","_c","$RefreshReg$"],"sources":["D:/react/SRwebui/SRwebui/sr-webui-app/src/component/BackgroundGalaxy.tsx"],"sourcesContent":["import styles from '../styles/BackgroundGalaxy.module.scss'\r\nimport ReactDOM from 'react-dom'\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\ntype Circle = {\r\n  pos: Point;\r\n  radius: number;\r\n  color: string;\r\n  active?: number;\r\n  draw: () => void;\r\n};\r\n\r\ntype Point = {\r\n  x: number;\r\n  y: number;\r\n  originX: number;\r\n  originY: number;\r\n  circle?: Circle;\r\n  closest?: Point[];\r\n  active?: number;\r\n};\r\n\r\nfunction BackgroundGalaxy(){\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const pointsRef = useRef<Point[]>([]);\r\n  const animateHeaderRef = useRef(true);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (canvas) {\r\n      const ctx = canvas.getContext('2d');\r\n      if (ctx) {\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n        const target = {x:width/2,y:height/2};\r\n\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        //create points\r\n        let points: Point[] = [];\r\n        for (var x = 0;x < width;x = x + width/20) {\r\n          for(var y = 0; y < height; y = y + height/20) {\r\n            var px = x + Math.random()*width/20;\r\n            var py = y + Math.random()*height/20;\r\n            var p = {x: px, originX: px, y: py, originY: py };\r\n            points.push(p);\r\n          }\r\n        }\r\n        for(var i = 0; i < points.length; i++) {\r\n          var closest = [];\r\n          var p1 = points[i];\r\n          for(var j = 0; j < points.length; j++) {\r\n              var p2 = points[j]\r\n              if(!(p1 === p2)) {\r\n                  var placed = false;\r\n                  for(var k = 0; k < 5; k++) {\r\n                      if(!placed) {\r\n                          if(closest[k] === undefined) {\r\n                              closest[k] = p2;\r\n                              placed = true;\r\n                          }\r\n                      }\r\n                  }\r\n\r\n                  for(var k = 0; k < 5; k++) {\r\n                      if(!placed) {\r\n                          if(getDistance(p1, p2) < getDistance(p1, closest[k])) {\r\n                              closest[k] = p2;\r\n                              placed = true;\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          p1.closest = closest;\r\n        }\r\n        const addListeners = () => {\r\n          window.addEventListener('mousemove', mouseMove);\r\n          window.addEventListener('scroll', scrollCheck);\r\n          window.addEventListener('resize', resize);\r\n        }\r\n        const mouseMove = (e: MouseEvent) => {\r\n          // ... mouseMove implementation\r\n        };\r\n\r\n        const scrollCheck = () => {\r\n          // ... scrollCheck implementation\r\n        };\r\n\r\n        const resize = () => {\r\n          // ... resize implementation\r\n        };\r\n      }\r\n    }\r\n  },[])\r\n\r\n  return ReactDOM.createPortal(\r\n    <div>\r\n      <canvas ref={canvasRef}></canvas>\r\n    </div>,\r\n    document.body\r\n  )\r\n}\r\n\r\nexport default BackgroundGalaxy"],"mappings":";;AACA,OAAOA,QAAQ,MAAM,WAAW;AAChC,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAoBlC,SAASC,gBAAgBA,CAAA,EAAE;EAAAC,EAAA;EACzB,MAAMC,SAAS,GAAGN,MAAM,CAAoB,IAAI,CAAC;EACjD,MAAMO,SAAS,GAAGP,MAAM,CAAU,EAAE,CAAC;EACrC,MAAMQ,gBAAgB,GAAGR,MAAM,CAAC,IAAI,CAAC;EAErCC,SAAS,CAAC,MAAM;IACd,MAAMQ,MAAM,GAAGH,SAAS,CAACI,OAAO;IAChC,IAAID,MAAM,EAAE;MACV,MAAME,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;MACnC,IAAID,GAAG,EAAE;QACP,MAAME,KAAK,GAAGC,MAAM,CAACC,UAAU;QAC/B,MAAMC,MAAM,GAAGF,MAAM,CAACG,WAAW;QACjC,MAAMC,MAAM,GAAG;UAACC,CAAC,EAACN,KAAK,GAAC,CAAC;UAACO,CAAC,EAACJ,MAAM,GAAC;QAAC,CAAC;QAErCP,MAAM,CAACI,KAAK,GAAGA,KAAK;QACpBJ,MAAM,CAACO,MAAM,GAAGA,MAAM;QACtB;QACA,IAAIK,MAAe,GAAG,EAAE;QACxB,KAAK,IAAIF,CAAC,GAAG,CAAC,EAACA,CAAC,GAAGN,KAAK,EAACM,CAAC,GAAGA,CAAC,GAAGN,KAAK,GAAC,EAAE,EAAE;UACzC,KAAI,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,EAAEI,CAAC,GAAGA,CAAC,GAAGJ,MAAM,GAAC,EAAE,EAAE;YAC5C,IAAIM,EAAE,GAAGH,CAAC,GAAGI,IAAI,CAACC,MAAM,CAAC,CAAC,GAACX,KAAK,GAAC,EAAE;YACnC,IAAIY,EAAE,GAAGL,CAAC,GAAGG,IAAI,CAACC,MAAM,CAAC,CAAC,GAACR,MAAM,GAAC,EAAE;YACpC,IAAIU,CAAC,GAAG;cAACP,CAAC,EAAEG,EAAE;cAAEK,OAAO,EAAEL,EAAE;cAAEF,CAAC,EAAEK,EAAE;cAAEG,OAAO,EAAEH;YAAG,CAAC;YACjDJ,MAAM,CAACQ,IAAI,CAACH,CAAC,CAAC;UAChB;QACF;QACA,KAAI,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,MAAM,CAACU,MAAM,EAAED,CAAC,EAAE,EAAE;UACrC,IAAIE,OAAO,GAAG,EAAE;UAChB,IAAIC,EAAE,GAAGZ,MAAM,CAACS,CAAC,CAAC;UAClB,KAAI,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,MAAM,CAACU,MAAM,EAAEG,CAAC,EAAE,EAAE;YACnC,IAAIC,EAAE,GAAGd,MAAM,CAACa,CAAC,CAAC;YAClB,IAAG,EAAED,EAAE,KAAKE,EAAE,CAAC,EAAE;cACb,IAAIC,MAAM,GAAG,KAAK;cAClB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;gBACvB,IAAG,CAACD,MAAM,EAAE;kBACR,IAAGJ,OAAO,CAACK,CAAC,CAAC,KAAKC,SAAS,EAAE;oBACzBN,OAAO,CAACK,CAAC,CAAC,GAAGF,EAAE;oBACfC,MAAM,GAAG,IAAI;kBACjB;gBACJ;cACJ;cAEA,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;gBACvB,IAAG,CAACD,MAAM,EAAE;kBACR,IAAGG,WAAW,CAACN,EAAE,EAAEE,EAAE,CAAC,GAAGI,WAAW,CAACN,EAAE,EAAED,OAAO,CAACK,CAAC,CAAC,CAAC,EAAE;oBAClDL,OAAO,CAACK,CAAC,CAAC,GAAGF,EAAE;oBACfC,MAAM,GAAG,IAAI;kBACjB;gBACJ;cACJ;YACJ;UACJ;UACAH,EAAE,CAACD,OAAO,GAAGA,OAAO;QACtB;QACA,MAAMQ,YAAY,GAAGA,CAAA,KAAM;UACzB1B,MAAM,CAAC2B,gBAAgB,CAAC,WAAW,EAAEC,SAAS,CAAC;UAC/C5B,MAAM,CAAC2B,gBAAgB,CAAC,QAAQ,EAAEE,WAAW,CAAC;UAC9C7B,MAAM,CAAC2B,gBAAgB,CAAC,QAAQ,EAAEG,MAAM,CAAC;QAC3C,CAAC;QACD,MAAMF,SAAS,GAAIG,CAAa,IAAK;UACnC;QAAA,CACD;QAED,MAAMF,WAAW,GAAGA,CAAA,KAAM;UACxB;QAAA,CACD;QAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;UACnB;QAAA,CACD;MACH;IACF;EACF,CAAC,EAAC,EAAE,CAAC;EAEL,oBAAO7C,QAAQ,CAAC+C,YAAY,eAC1B3C,OAAA;IAAA4C,QAAA,eACE5C,OAAA;MAAQ6C,GAAG,EAAE1C;IAAU;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC,EACNC,QAAQ,CAACC,IACX,CAAC;AACH;AAACjD,EAAA,CAhFQD,gBAAgB;AAAAmD,EAAA,GAAhBnD,gBAAgB;AAkFzB,eAAeA,gBAAgB;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}