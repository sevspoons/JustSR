{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\SRwebui\\\\SRwebui\\\\sr-webui-app\\\\src\\\\component\\\\BackgroundGalaxy.tsx\",\n  _s = $RefreshSig$();\nimport ReactDOM from 'react-dom';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BackgroundGalaxy() {\n  _s();\n  const largeHeaderRef = useRef(null);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const largeHeader = largeHeaderRef.current;\n    if (canvas && largeHeader) {\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        var width = window.innerWidth;\n        var height = window.innerHeight;\n        var target = {\n          x: width / 2,\n          y: height / 2\n        };\n        var animateHeader = true;\n        canvas.width = width;\n        canvas.height = height;\n        var points = [];\n        const getDistance = (p1, p2) => {\n          return Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2);\n        };\n        const initHeader = () => {\n          //create points\n          for (var x = 0; x < width; x = x + width / 20) {\n            for (var y = 0; y < height; y = y + height / 20) {\n              var px = x + Math.random() * width / 20;\n              var py = y + Math.random() * height / 20;\n              var p = {\n                x: px,\n                originX: px,\n                y: py,\n                originY: py\n              };\n              points.push(p);\n            }\n          }\n          //find 5 neibor for each point\n          for (var i = 0; i < points.length; i++) {\n            var closest = [];\n            var p1 = points[i];\n            for (var j = 0; j < points.length; j++) {\n              var p2 = points[j];\n              if (!(p1 === p2)) {\n                var placed = false;\n                for (var k = 0; k < 5; k++) {\n                  if (!placed) {\n                    if (closest[k] === undefined) {\n                      closest[k] = p2;\n                      placed = true;\n                    }\n                  }\n                }\n                for (var l = 0; l < 5; l++) {\n                  if (!placed) {\n                    if (getDistance(p1, p2) < getDistance(p1, closest[l])) {\n                      closest[l] = p2;\n                      placed = true;\n                    }\n                  }\n                }\n              }\n            }\n            p1.closest = closest;\n          }\n          for (const index in points) {\n            let c = {\n              pos: points[index],\n              radius: 2 + Math.random() * 2,\n              color: 'rgba(255,255,255,0.3)'\n            };\n            points[index].circle = c;\n          }\n        };\n        const mouseMove = e => {\n          var posX = 0,\n            posY = 0;\n          if (e.pageX || e.pageY) {\n            posX = e.pageX;\n            posY = e.pageY;\n          } else if (e.clientX || e.clientY) {\n            posX = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\n            posY = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\n          }\n          target.x = posX;\n          target.y = posY;\n        };\n        const scrollCheck = () => {\n          if (document.body.scrollTop > height) animateHeader = false;else animateHeader = true;\n        };\n        const resize = () => {\n          width = window.innerWidth;\n          height = window.innerHeight;\n          largeHeader.style.height = height + 'px';\n          canvas.width = width;\n          canvas.height = height;\n        };\n        const addListeners = () => {\n          if (!('ontouchstart' in window)) {\n            window.addEventListener('mousemove', mouseMove);\n          }\n          window.addEventListener('scroll', scrollCheck);\n          window.addEventListener('resize', resize);\n        };\n        const animate = () => {\n          if (animateHeader) {\n            ctx.clearRect(0, 0, width, height);\n            for (var i in points) {\n              // detect points in range\n              if (points[i].circle && Math.abs(getDistance(target, points[i])) < 4000) {\n                points[i].active = 0.3;\n                points[i].circle.active = 0.6;\n              } else if (Math.abs(getDistance(target, points[i])) < 20000) {\n                points[i].active = 0.1;\n                points[i].circle.active = 0.3;\n              } else if (Math.abs(getDistance(target, points[i])) < 40000) {\n                points[i].active = 0.02;\n                points[i].circle.active = 0.1;\n              } else {\n                points[i].active = 0;\n                points[i].circle.active = 0;\n              }\n              drawLines(points[i]);\n              points[i].circle.draw();\n            }\n          }\n          requestAnimationFrame(animate);\n        };\n        const initAnimation = () => {};\n        initHeader();\n        initAnimation();\n      }\n    }\n  }, []);\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: largeHeaderRef,\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this), document.body);\n}\n_s(BackgroundGalaxy, \"V7RM75G11mnFB1sVveWBxI01qW8=\");\n_c = BackgroundGalaxy;\nexport default BackgroundGalaxy;\nvar _c;\n$RefreshReg$(_c, \"BackgroundGalaxy\");","map":{"version":3,"names":["ReactDOM","useRef","useEffect","jsxDEV","_jsxDEV","BackgroundGalaxy","_s","largeHeaderRef","canvasRef","canvas","current","largeHeader","ctx","getContext","width","window","innerWidth","height","innerHeight","target","x","y","animateHeader","points","getDistance","p1","p2","Math","pow","initHeader","px","random","py","p","originX","originY","push","i","length","closest","j","placed","k","undefined","l","index","c","pos","radius","color","circle","mouseMove","e","posX","posY","pageX","pageY","clientX","clientY","document","body","scrollLeft","documentElement","scrollTop","scrollCheck","resize","style","addListeners","addEventListener","animate","clearRect","abs","active","drawLines","draw","requestAnimationFrame","initAnimation","createPortal","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react/SRwebui/SRwebui/sr-webui-app/src/component/BackgroundGalaxy.tsx"],"sourcesContent":["import styles from '../styles/BackgroundGalaxy.module.scss'\r\nimport ReactDOM from 'react-dom'\r\nimport { useRef } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\ntype Circle = {\r\n  pos: Point;\r\n  radius: number;\r\n  color: string;\r\n  active?: number;\r\n  draw: () => void;\r\n};\r\n\r\ntype Point = {\r\n  x: number;\r\n  y: number;\r\n  circle?: Circle;\r\n  closest?: Point[];\r\n  active?: number;\r\n};\r\n\r\nfunction BackgroundGalaxy(){\r\n  const largeHeaderRef = useRef<HTMLDivElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const largeHeader = largeHeaderRef.current;\r\n    if (canvas && largeHeader) {\r\n      const ctx = canvas.getContext('2d');\r\n      if (ctx) {\r\n        var width = window.innerWidth;\r\n        var height = window.innerHeight;\r\n        var target = {x:width/2,y:height/2};\r\n        var animateHeader:boolean = true;\r\n\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        var points: Point[] = [];\r\n        const getDistance = (p1: Point, p2: Point) => {\r\n          return Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2);\r\n        }\r\n        const initHeader = ()=>{\r\n          //create points\r\n          for (var x = 0;x < width;x = x + width/20) {\r\n            for(var y = 0; y < height; y = y + height/20) {\r\n              var px = x + Math.random()*width/20;\r\n              var py = y + Math.random()*height/20;\r\n              var p = {x: px, originX: px, y: py, originY: py };\r\n              points.push(p);\r\n            }\r\n          }\r\n          //find 5 neibor for each point\r\n          for(var i = 0; i < points.length; i++) {\r\n            var closest = [];\r\n            var p1 = points[i];\r\n            for(var j = 0; j < points.length; j++) {\r\n              var p2 = points[j]\r\n              if(!(p1 === p2)) {\r\n                var placed = false;\r\n                for(var k = 0; k < 5; k++) {\r\n                  if(!placed) {\r\n                    if(closest[k] === undefined) {\r\n                      closest[k] = p2;\r\n                      placed = true;\r\n                    }\r\n                  }\r\n                }\r\n                for(var l = 0; l < 5; l++) {\r\n                  if(!placed) {\r\n                    if(getDistance(p1, p2) < getDistance(p1, closest[l])) {\r\n                      closest[l] = p2;\r\n                      placed = true;\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            p1.closest = closest;\r\n          }\r\n          for(const index in points) {\r\n            let c:Circle = { pos:points[index], radius:2+Math.random()*2, color:'rgba(255,255,255,0.3)'};\r\n            points[index].circle = c;\r\n          }\r\n        }\r\n        const mouseMove = (e:MouseEvent) => {\r\n          var posX =0,posY = 0;\r\n          if (e.pageX || e.pageY) {\r\n              posX = e.pageX;\r\n              posY = e.pageY;\r\n          }\r\n          else if (e.clientX || e.clientY)    {\r\n              posX = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n              posY = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\r\n          }\r\n          target.x = posX;\r\n          target.y = posY;\r\n        }\r\n  \r\n        const scrollCheck = () => {\r\n            if(document.body.scrollTop > height) animateHeader = false;\r\n            else animateHeader = true;\r\n        }\r\n  \r\n        const resize = () => {\r\n            width = window.innerWidth;\r\n            height = window.innerHeight;\r\n            largeHeader.style.height = height+'px';\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n        }\r\n\r\n        const addListeners = () => {\r\n          if(!('ontouchstart' in window)) {\r\n              window.addEventListener('mousemove', mouseMove);\r\n          }\r\n          window.addEventListener('scroll', scrollCheck);\r\n          window.addEventListener('resize', resize);\r\n        }\r\n        const animate = () => {\r\n          if(animateHeader) {\r\n              ctx.clearRect(0,0,width,height);\r\n              for(var i in points) {\r\n                  // detect points in range\r\n                  if(points[i].circle && Math.abs(getDistance(target, points[i])) < 4000) {\r\n                    points[i].active = 0.3;\r\n                    points[i].circle.active = 0.6;\r\n                  } else if(Math.abs(getDistance(target, points[i])) < 20000) {\r\n                    points[i].active = 0.1;\r\n                    points[i].circle.active = 0.3;\r\n                  } else if(Math.abs(getDistance(target, points[i])) < 40000) {\r\n                    points[i].active = 0.02;\r\n                    points[i].circle.active = 0.1;\r\n                  } else {\r\n                    points[i].active = 0;\r\n                    points[i].circle.active = 0;\r\n                  }\r\n                  drawLines(points[i]);\r\n                  points[i].circle.draw();\r\n              }\r\n          }\r\n          requestAnimationFrame(animate);\r\n        }\r\n\r\n        const initAnimation = ()=>{\r\n\r\n        }\r\n        initHeader();\r\n        initAnimation();\r\n      }\r\n    }\r\n  },[])\r\n\r\n  return ReactDOM.createPortal(\r\n    <div ref={largeHeaderRef}>\r\n      <canvas ref={canvasRef}></canvas>\r\n    </div>,\r\n    document.body\r\n  )\r\n}\r\n\r\nexport default BackgroundGalaxy"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}